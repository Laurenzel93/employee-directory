{"version":3,"sources":["Navbar.js","Table.js","Content.js","App.js","index.js"],"names":["Navbar","props","className","onSubmit","handleFormSubmit","type","placeholder","onChange","handleInputChange","Table","useState","people","setPeople","useEffect","fetch","then","resp","json","results","console","log","onClick","sortedPeople","sort","a","b","name","first","last","map","person","src","picture","thumbnail","location","state","country","email","phone","Content","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAkBeA,EAlBA,SAACC,GAEZ,OACI,sBAAKC,UAAU,uBAAf,UACI,gDACA,qBAAKA,UAAU,2CAAf,SACI,uBAAMC,SAAUF,EAAMG,iBAAtB,UACI,uBACIC,KAAK,SACLC,YAAY,SACZC,SAAUN,EAAMO,oBACpB,wBAAQN,UAAU,wBAAwBG,KAAK,SAA/C,yB,cC2DLI,EAnED,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACNC,MAAM,yCACDC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACFJ,EAAUI,EAAKE,SACfC,QAAQC,IAAIJ,EAAKE,cAE1B,IA0BH,OADAC,QAAQC,IAAIT,GAER,wBAAOT,UAAU,6CAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,yCACA,qBAAImB,QAjBI,WACpBF,QAAQC,IAAI,SACZ,IAKME,EAAeX,EAAOY,MALT,SAACC,EAAGC,GACnB,OAAID,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MAAc,EACpCH,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,OAAe,EAClC,KAGXf,EAAU,YAAIU,KASF,wBAAyC,6CACzC,qBAAID,QA9BG,WACnBF,QAAQC,IAAI,SACZ,IAKME,EAAeX,EAAOY,MALT,SAACC,EAAGC,GACnB,OAAID,EAAEE,KAAKE,KAAOH,EAAEC,KAAKE,KAAa,EAClCJ,EAAEE,KAAKE,KAAOH,EAAEC,KAAKE,MAAc,EAChC,KAGXhB,EAAU,YAAIU,KAsBF,uBAAuC,6CACvC,0CACA,uCACA,4CAGR,gCACKX,EAAOkB,KAAI,SAAAC,GAAM,OACd,+BACI,6BACI,qBAAKC,IAAKD,EAAOE,QAAQC,cAE7B,mCAAMH,EAAOJ,KAAKC,SAClB,mCAAMG,EAAOJ,KAAKE,QAClB,mCAAME,EAAOI,SAASC,MAAtB,KAA+BL,EAAOI,SAASE,WAC/C,mCAAMN,EAAOO,SACb,mCAAMP,EAAOQ,WARRR,EAAOJ,KAAKE,eC5C1BW,EARC,SAACtC,GACb,OACI,oCACI,cAAC,EAAD,OCSGuC,MAVf,WAEE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCFNuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e66d706e.chunk.js","sourcesContent":["const Navbar = (props) => {\n\n    return (\n        <div className='jumbotron bg-primary'>\n            <h1>User Directory</h1>\n            <nav className=\"navbar bg-primary justify-content-center\">\n                <form onSubmit={props.handleFormSubmit}>\n                    <input\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        onChange={props.handleInputChange} />\n                    <button className=\"btn btn-outline-light\" type=\"submit\">Go</button>\n                </form>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;","import { useEffect, useState } from \"react\";\n\n\nconst Table = () => {\n    const [people, setPeople] = useState([]);\n\n\n    useEffect(() => {\n        fetch(\"https://randomuser.me/api/?results=50\")\n            .then(resp => resp.json())\n            .then(resp => {\n                setPeople(resp.results)\n                console.log(resp.results)\n            })\n    }, [])\n\n    const SortByLastName = () => {\n        console.log('Hello');\n        const comparator = (a, b) => {\n            if (a.name.last > b.name.last) return 1;\n            if (a.name.last < b.name.last) return -1;\n            return 0;\n        }\n        const sortedPeople = people.sort(comparator);\n        setPeople([...sortedPeople]);\n\n    }\n\n    const SortByFirstName = () => {\n        console.log('Hello');\n        const comparator = (a, b) => {\n            if (a.name.first > b.name.first) return 1;\n            if (a.name.first < b.name.first) return -1;\n            return 0;\n        }\n        const sortedPeople = people.sort(comparator);\n        setPeople([...sortedPeople]);\n\n    }\n    console.log(people);\n    return (\n        <table className=\"table table-striped justify-content-center\">\n            <thead className='thead-dark'>\n                <tr>\n                    <th>Picture</th>\n                    <th onClick={SortByFirstName}>First Name <button>sort</button></th>\n                    <th onClick={SortByLastName}>Last Name <button>sort</button></th>\n                    <th>Location</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                </tr>\n            </thead>\n            <tbody>\n                {people.map(person =>\n                    <tr key={person.name.last}>\n                        <td>\n                            <img src={person.picture.thumbnail} />\n                        </td>\n                        <td> {person.name.first}</td>\n                        <td> {person.name.last}</td>\n                        <td> {person.location.state}, {person.location.country}</td>\n                        <td> {person.email}</td>\n                        <td> {person.phone}</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Table;","import Table from './Table';\n\nconst Content = (props) => {\n    return (\n        <container>\n            <Table />\n        </container>\n    );\n}\n\nexport default Content;","import './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}